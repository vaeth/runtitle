#! /usr/bin/env sh
Echo() {
	printf '%s\n' "${*}"
}

Usage() {
	Echo "Usage: ${0##*/} [options] [--] command [options for command]
Run command with appropriate hard status (windows title) and run bell on error.
The special command \"eval\" can be used to execute the options as shell code.
options:
-n NUM  Run command up to NUM times if it fails; currently ${numfail}
        0 means re-run forever if necessary.
-N NUM  Run command at least NUM times even if it succeeds; currently ${numall}
        0 means re-run forever
-q      Never beep
-v      Beep at every restart
-b      Beep always at the end
-B      Beep only if all retries failed
-T[pPfHsS-] pass option(s) to the title script; - means no title
--      Last option"
	exit ${1:-1}
}

quiet=false
verbose=false
beep=false
latebeep=false
numfail=1
numall=1
titleopt=
OPTIND=1
while getopts 'qvbBn:N:T:h?' opt
do	case ${opt} in
	q)	quiet=:;;
	v)	verbose=:;;
	b)	beep=:;;
	B)	latebeep=:;;
	n)	numfail=${OPTARG};;
	N)	numall=${OPTARG};;
	T)	titleopt="${titleopt}${titleopt:+ }-${opt}";;
	*)	Usage 0;;
	esac
done
shift $(( ${OPTIND} -1 ))

case ${titleopt} in
*[!pPfHsS-]*)
	Usage;;
esac

[ ${#} -ne 0 ] || Usage
case ${numfail:-x}${numall:-x} in
*[!0-9]*)	Usage;;
esac
[ ${numall} -eq 0 ] && numfail=0
[ ${numall} -le ${numfail} ] || numfail=${numall}

if ${quiet}
then	Beep() {
:
}
else	Beep() {
printf '\007'
}
fi

Exit() {
exit ${1:-${?}}
}

Title() {
Title() {
:
}
	case ${titleopt} in
	*-*)	return;;
	esac
	command -v title >/dev/null 2>&1 || return 0
Exit() {
	exitstat=${1:-${?}}
	trap - EXIT HUP INT TERM
	exit ${exitstat}
}
TitleTrap() {
	trap : EXIT HUP INT TERM
	Title "${cprog} interrupt"
	trap - EXIT HUP INT TERM
	exit 130
}
	trap TitleTrap EXIT HUP INT TERM
TitleInit() {
. title "${@}"
}
	TitleInit ${titleopt:+"-${titleopt}"} -- "${@}"
}

currtry=1
prog=${1##*/}
Loop() {
	cprog=${prog}
	Title "running ${cprog}"
	while :
	do	( "${@}" ) && {
			[ ${numall} -ne 0 ] && [ ${currtry} -ge ${numall} ] && return
			${verbose} && Beep
			currtry=$(( ${currtry} + 1 ))
			cprog="${prog}(${currtry})"
			Title "running ${cprog}"
			continue
		}
		ret=${?}
		cprog="${prog}(${currtry})"
		${latebeep} || Beep
		[ ${numfail} -ne 0 ] && [ ${currtry} -ge ${numfail} ] && return ${ret}
		${verbose} && ${latebeep} && Beep
		Title "failure ${cprog}[${ret}]"
		currtry=$(( ${currtry} + 1 ))
	done
}

Loop "${@}" && {
	Title "${cprog} success"
	${beep} && Beep
	Exit 0
}
Title "${cprog}[${ret}]"
${latebeep} && Beep
Exit ${ret}
